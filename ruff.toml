# List of file locations to exclude
exclude = [
    '.sdk_env',
    'protoc_gen_openapiv2',
    'tamr',
    'tamr_sdk/jobs/types_jobs.py',
    'docs_src/conf.py'
]

# Line length and indentation same as Black
line-length = 88
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[lint]
# Setup for which rules are ignored or enabled.
# Enables Docstring enforcement (`D`), Pyflakes (`F`) and a subset of the
# pycodestyle (`E`) codes by default.
# Also include import sorting (`I`) and Pycodestyle warnings (`W`), and
# McCabe complexity (`C901`).
select = ["C901", "D", "E4", "E7", "E9", "F", "I", "W"]
ignore = ["D213", "D211"]
pydocstyle.convention = "google"

# Allow fix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings
quote-style = "double"

# Like Black, indent with spaces, rather than tabs
indent-style = "space"
skip-magic-trailing-comma = true

# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

# If true, enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[lint.isort]
split-on-trailing-comma=false

[lint.mccabe]
max-complexity = 6
